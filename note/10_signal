1. 常见的信号
	
		不能被捕捉或者忽略的两个信号
		SIGKILL		可以杀死任一进程		
		SIGSTOP		作业控制，停止一个进程（类似SIGTSTP），但是不能被捕捉或者忽略

		SIGINT		ctrl+c 终端驱动程序产生此信号并送到前台进程组中的每一个进程，终止它们
		SIGQUIT		ctrl+\ 同上，不过会产生一个core文件	
		SIGTSTP		ctrl+z 交互式停止信号，传至前台进程组每一个进程

		SIGABRT		调用abort函数产生此信号，进程异常终止
		SIGALRM		调用alarm函数设置的计时器超时时，产生此信号	
	
		SIGHUP		如果终端借口检测到一个链接断开，将此信号发送给与该终端相关的控制进程（会话首进程）
		SIGCONT		此作业控制进程信号被发送给需要继续运行，但是当前处于停止状态的进程。
					如果进程是停止的，则默认继续运行。
					否则，默认动作是忽略
		
		SIGTTIN		当一个后台进程尝试读其控制终端时，终端驱动产生此信号。以下特殊情况不产生：
					a.读进程忽略忽略或阻塞此信号
					b.读进程所属的进程组时孤儿进程组，此时读操作返回出错，并将errno设置为EIO
		SIGTTOU		后台进程试图写其控制终端时产生。与SIGTTOU不同的是，可以选择允许后台进程写到控制终端
		

		SIGURG		此信号通知进程已经发生一个紧急情况。在网络连接上接收到带外的数据时，可选择产生此信号
		
		SIGUSER1	用户定义的的信号，可用于应用程序
		SIGUSER2	与SIGUSER2相似

		SIGPIPE		在写管道时读进程已经终止，则产生此信号
		SIGPOLL		当一个可论寻设备上发生一特定事件时产生此信号
		

		SIGTERM 	由kill命令发送的系统默认终止信号

		SIGIO		指示一个异步IO事件
		
		
2. signal函数

	#include<signal.h>
	
	void (*signal(int signo, void(&func)(int)))(int)

	返回设置之前的函数

		func的值是常量SIG_IGN SIG_DFL 或者街道此信号之后要调用的函数
			信号处理函数 signal handler

	第二个参数是一个函数指针，所指向的函数需要一个整形参数，无返回值
	signal是个函数指针，返回一个函数地址，该函数有一个整形参数

	
	exec函数将原来设置为要捕捉的信号更改为默认动作

3. 不可靠信号
4. 中断的系统调用
5. 可重入函数

	不可重入的函数：
		a. 已知他们使用静态数据结构
		b. 他们调用malloc或free
		c. 是标准I/O函数

	可重入函数因当在信号处理程序中调用可重入函数时,在其前保存errno值,在其后恢复

	在信号处理程序中调用一个不可重入函数,其结果是不可遇见的

	

